%
%function  [Cs]=ncscohereshuffle(Data,chan1,chan2,df,N,flag)
%
%DESCRIPTION: Shuffled Coherences for multi channel data from NCS file
%
%   Data	: Data structure containg all NCS channels from single 
%		  recording session (obtained using READALLNCS)
%   chan1	: Array of reference channels to correlate
%   chan2 	: Array of secondary channesl to correlate
%   df		: Spectral Resolution in Hz
%   N		: Number of shuffling itterations
%   flag	: Significance criterion
%		  1: Fixed Threshold (Default)
%		  2: Frequency Dependent Threshold
%
%RETURNED VARIABLES
%
%    Cs		: Shuffled Coherence Data Structure (For significance Analysis)
%		  C01		: 0.01 confidence interval
%		  C05		: 0.05 confidence interval
%		  ADChannels	: Channels used for coherence estimates
%		  Faxis		: Frequency Axis		
%
%Monty A. Escabi, Dec. 13, 2005
%
function  [Cs]=ncscohereshuffle(Data,chan1,chan2,df,N,flag)

%Input Arguments
if nargin<6
	flag=1;
end

%Choosing Window Function 
Fs=Data(1).Fs;
W=designw(df,40,Fs);
NFFT=2^nextpow2(length(W));

%Quantized Amplitude Scaling Factor
dA=Data(1).ADBitVolts;


%Computing Coherence
for k=1:length(chan1)
	for l=1:length(chan2)
		for n=1:N
			%Shuffled Coherence Estimate
			M=length(Data(chan1(k)).X);
			index=round(.95*rand*M);
			X1=[Data(chan1(k)).X(index+1:M)  Data(chan1(k)).X(1:index)];
			[CS(k,l,n).Cxy,Cs(k,l).Faxis]=...
				cohere(dA*X1,dA*Data(chan2(l)).X,NFFT,Fs,W);
			Cs(k,l).ADChannels=...
				[Data(chan1(k)).ADChannel Data(chan2(l)).ADChannel];
		end
	end
end

%Estimating Significance Curve
if flag==2

	%Computing 0.05 and 0.01 confidence interval
	for k=1:length(chan1)
		for l=1:length(chan2)
			%Shuffled Coherence
			Cxy=[CS(k,l,:).Cxy];
	
			for m=1:size(Cxy,1)

                %0.01 confidence interval
                CXYsort=sort(Cxy(m,:));
                NN=round(size(Cxy,2)*0.99);
                Cs(k,l).C01(m,1)=CXYsort(NN);
                
                 %0.05 confidence interval
                CXYsort=sort(Cxy(m,:));
                NN=round(size(Cxy,2)*0.95);
                Cs(k,l).C05(m,1)=CXYsort(NN);
                
			end
		end
	end
else

	%Computing 0.05 and 0.01 confidence interval (Fixed Threshold)
	for k=1:length(chan1)
		for l=1:length(chan2)
		
			%Shuffled Coherence
			Cxy=[CS.Cxy];
			Cxy=reshape(Cxy,1,size(Cxy,1)*size(Cxy,2));
	
                %0.01 confidence interval
                CXYsort=sort(Cxy);
                NN=round(length(Cxy)*0.99);
                Cs(k,l).C01(m,1)=CXYsort(NN)*ones(size(CS(1).Cxy));
                
                 %0.05 confidence interval
                CXYsort=sort(Cxy);
                NN=round(length(Cxy)*0.95);
                Cs(k,l).C05(m,1)=CXYsort(NN)*ones(size(CS(1).Cxy));
					
		end
	end
end
