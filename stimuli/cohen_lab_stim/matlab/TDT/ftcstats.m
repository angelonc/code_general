%%function [FTCStats] = ftcstats(FTCHistboot,T1,T2,p,deltaX,RegN,RegM,Disp)%%	FILE NAME 	: FTCStats%	DESCRIPTION : Generates a tunning curve from bootstraped version adn%                 characterizes all of the temporal and spectral properties%                 of the FTC.%                 Requires a bootstrap version of FTCHist as input (FTCHISTGENERATEBOOT)%%	FTCHistboot	: Tunning Curve Data Structure%                 .Freq     - Frequency Axis%                 .Level    - Sound Level Axis (dB)%                 .time     - Time axis (msec)%                 .NFTC     - Number of FTCs averaged%                 .T1       - Minimum Time (msec)%                 .T2       - Maximum Time (msec)%                 .data     - Data matrix%   T1          : Start time for measuring spontaneous activity (msec)%                 (OPTIONAL, Default==250 msec)%   T2          : End time for measuring spontaneous activity (msec)%                 (OPTIONAL, Default==300 msec)%   alpha       : Significance level for thresholding tuning curve%                 (OPTIONAL, Default=0.05)%   deltaX      : Number of octaves for bandwidth/monotonicity analysis%                 (OPTIONAL, Default=0.5);%   RegN        : Minimum number of significant samples required for regularity%                 analysis. At least RegN samples need to be present within%                 a windown of size RegM x RegM for a point to be%                 considered real (OPTIONAL, Default=3)%   RegM        : Window size for regularity analysis (M x M). %                 (OPTIONAL, Default==3)%   Disp        : Display data 'y' or 'n' (Default=='n')%% RETURNED DATA%   MonData     : Output Data Sturcture%                 .FTC      - FTC Data structure%                 .RLC      - Rate Level Curve%                 .RLCb     - Bootstrapped Rate Level Curve%                 .Dp1      - D-Prime for 1 response trial%                 .Dp1b     - Bootstrapped D-Prime for 1 response trial%                 .DpN      - D-Prime for N response trials%                 .MonIndex - Monotonicity Index%                 .MonIndexb- Bootstrapped Monotonicity Index%                 .Slope    - Slope for sound levels beyond maximum response%                             (units of z-scorese/dB). Returns NaN if response peak%                             occurs at maximum sound level.%                 .Sig      - Array containing significant (1) and non%                             significant %                             (0) sound levels obtained using FTCHISTTHRESHOLD %                 .Mask     - Regularity Mask, takes values of NaN if the%                             FTC did not exceed the regularity criterion%                             at a given SPL, 1 if it did satisfy it.%                 .Mean     - Best Frequency (BF, Hz)%                 .Std      - Half Bandwidth, Standard Deviation (Octaves)%                 .Skewness - Skewness at each SPL%                 .Threshold- Attenuation response Threhshold (dB)%                 .CF       - Characteristic Frequency%                 .SPLMax   - SPL with maximal response%                 .t1       - Start time for significant FTC%                 .t2       - End time for significant FTC%                 .t1m      - Start time for FTC based on mean rate zero-crossing%                 .t2m      - End time for FTC based on mean rate zero-crossing%                 .tp       - Time of peak%                 .tnp      - Time of secondary negative response peak%                 .tn1      - Time of significance level crossing following tnp%                 .tn1m     - Time of mean rate level crossing following tnp%                 .H        - 0 if Peak is below significance level, 1 if above%% (C) Monty A. Escabi, Edited Aug 2007%function [FTCStats] = ftcstats(FTCHistboot,T1,T2,alpha,deltaX,RegN,RegM,Disp)%Input Argumensif nargin<2    T1=250;endif nargin<3    T2=300;endif nargin<4    alpha=0.05; %fixed, before p=0.05;endif nargin<5    deltaX=0.5;endif nargin<6    RegN=4;endif nargin<7    RegM=3;endif nargin<8    Disp='n';end%Finding Temporal Onset, Offset and Peak TimesFTCHist=FTCHistboot;FTCHist.data=sum(FTCHistboot.data,4);[t1,t2,t1m,t2m,tp,tnp,tn1,tn1m] = ftchistthreshold(FTCHist,T1,T2,alpha,Disp);%Performing Spectral and Monotonicity Analysisif FTCHistboot.NFTC==1    [MonData] = ftcmonotonicityonetrial(FTCHistboot,t1,t2,alpha,deltaX,RegN,RegM,Disp);else    [MonData] = ftcmonotonicity(FTCHistboot,t1,t2,alpha,deltaX,RegN,RegM,Disp);end%Finding Temporal Onset, Offset and Peak Times at each SPL[t1spl,t2spl,t1mspl,t2mspl,tpspl,Hspl] = ftchistsplthreshold(FTCHist,T1,T2,alpha,Disp);%Creating Output Data StructureFTCStats=MonData;FTCStats.t1=t1;FTCStats.t2=t2;FTCStats.t1m=t1m;FTCStats.t2m=t2m;FTCStats.tp=tp;FTCStats.tnp=tnp;FTCStats.tn1=tn1;FTCStats.tn1m=tn1m;FTCStats.t1spl=t1spl;FTCStats.t2spl=t2spl;FTCStats.t1mspl=t1mspl;FTCStats.t2mspl=t2mspl;FTCStats.tpspl=tpspl;FTCStats.Hspl=Hspl;