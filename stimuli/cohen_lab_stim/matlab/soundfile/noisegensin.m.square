%
%function [Y,phase,SpecProf,faxis,taxis]=noisegensin(f1,f2,RD,RP,App,Fs,phase,fphase,K,NB,MaxRD,MaxFM)
%	
%	FILE NAME 	: RIPGENSIN
%	DESCRIPTION 	: Dynamic Ripple Spectrum Noise Generator
%			  via sinusoid bank.
%
%       f1              : Lower Ripple Frequency
%       f2              : Upper Ripple Frequency
%	RD		: Ripple Density Signal
%	RP		: Ripple Phase Signal
%       App             : Peak to Peak Riple Amplitude 
%	Fs		: Sampling Rate
%	phase		: Sinusoid Initial Phases
%	fphase		: Bandlimit Frequency of Phase Signal
%	K		: Itteration Number
%	NB		: Number of Blocks to divide parameter space into
%                         Note that number of ripple components is NBxNB
%	MaxRD		: Maximum Ripple Density
%	MaxFM		: Maximum Amplitude Modulation Frequency
%
function [Y,phase,SpecProf,faxis,taxis]=noisegensin(f1,f2,RD,RP,App,Fs,phase,fphase,K,NB,MaxRD,MaxFM)

%Parameters
N=32;				%Noise Reconstruction Size  ->> Before changing check dynripsin!!!
LL=1000;			%Noise Upsampling Factor    ->> Before changing check dynripsin!!!
M=N*LL;				%Number of samples

%Log Frequency Axis
L=length(phase);
faxis=(0:L-1)/(L-1)*(f2-f1)+f1;
X=log2(faxis/f1);

%Full Ripple Spectrum Noise
Y=zeros(1,M);
for k=1:L
disp(k)
	%Finding Carrier Phase Signal so that variability in phase
	%Is Uniformly distributed in [-df/2 , df/2]
	df=(faxis(2)-faxis(1))*(noiseunif(fphase,Fs/LL,N*2)-.5);
	dphase=2*pi*intfft(df)/(Fs/LL);
	dphase=dphase(1:N);
	dphase=interp10(dphase,3);
	dphase=dphase  - dphase(1) + phase(k);

	%Generating Spectral Profile
	A=zeros(1,N*LL);
	n=1;
	for i=1:NB
		for j=1:NB
		A=A + ( -App + App * sin( 2*pi*( RD(n,:)*X(k)+ RP(i+(j-1)*NB,:) ) ) )/ 2;
		n=n+1;
		end
	end

	%Converting to Linear Scale and 
	%Compresing Dynamic Range by a Factor of 1/NB/NB 
	%This compresses the range to [-App , 0]
	A=10.^(A/(20*NB*NB));

	%Modulating and Adding Carriers
	Y= Y + A .* sin( 2*pi*faxis(k)*(K*M+1:(K+1)*M)/Fs + dphase );
	phase(k)=dphase(M);
end

%Generating Spectral Profile
%Downsample RP and RD by 44
SpecProf=zeros(length(X),length(RD(1:44:M)));
for k=1:length(X)
	n=1;
	for i=1:NB
		for j=1:NB
		%Adding NB*NB Ripple Profiles
		SpecProf(k,:)=SpecProf(k,:) + ( -App + App * sin( 2*pi*RD(n,1:44:M)*X(k)+RP(i+(j-1)*NB,1:44:M) ) ) / 2;
		n=n+1;
		end
	end
end

%Converting to Linear Scale and 
%Compresing Dynamic Range by a Factor of 1/NB/NB 
%This compresses the range to [-App , 0]
SpecProf=10.^(SpecProf/(20*NB*NB));

%Defining Time Axis
taxis=(0:length(RD(1:44:M))-1)/44100*44;

pcolor(taxis,faxis,SpecProf),shading flat, colormap jet
pause
