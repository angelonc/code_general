%
%function []=vrippleitdcon(outfile,f1,f2,Fm1,Fm2,RD,M,Fs,NS,RP,itdmax)
%
%	FILE NAME 	: V RIPPLE ITD CON
%	DESCRIPTION 	: Binaural Virtual Ripple Sound
%			  Generated by an ITD map of continus-randomly
%			  modulated tones
%			  Create timber percept only ( RD only )
%
%	outfile		: Output '.sw' File Name ( 'int16' format )
%	f1		: Minimum Carrier Frequency
%	f2		: Maximum Carrier Frequency
%	Fm1		: Minimum temporal modulation rate
%	Fm2		: Maximum temporal modulation rate
%	RD		: Ripple density
%       M               : Number of Samples
%       Fs              : Sampling Rate
%	NS		: Number of sinusoid carriers
%	RP		: Ripple Phase [0,2*pi]
%			  Default : Choosen randomly
%	itdmax		: Maximum ITD ( us ) ( Default: 500 us )
%
function []=vrippleitdcon(outfile,f1,f2,Fm1,Fm2,RD,M,Fs,NS,RP,itdmax)

%Input Arguments
if nargin<10
	RP=2*pi*rand;
end
if nargin<11
	itdmax=500;
end

%Octave Frequency Axis
XMax=log2(f2/f1);
X=(0:NS-1)/(NS-1)*XMax;
faxis=f1*2.^X;

%Generating ITD Envelope
ITD=round(sin(2*pi*RD*X+RP)/2+0.5);
index=find(ITD==0);
ITD(index)=rand(1,length(index));
ITD=itdmax/1E6*ITD;
plot(ITD,'r+'),colormap jet,shading flat,colorbar, pause

%Contra and Ipsi Temporal Sample Shift
N1=round(ITD/2*Fs);
N2=-N1;
N1=N1+round(itdmax/1E6*Fs);
N2=N2+round(itdmax/1E6*Fs);

%Generating Contra and Ipsi Sound Sequence
X1=zeros(1,M);
X2=zeros(1,M);
for k=1:NS

	%Display Output
	clc
	disp(['Generating Carrier: ' int2str(k) ' of ' int2str(NS)])

	%Temporal Envelope
	Env=noiseunifh(Fm1,Fm2,Fs/100,round(M/100+2*itdmax/1E6*Fs));
	Env=interp(Env,10);
	Env=interp(Env,10);
	Env=Env+min(Env);

	%Random Phase
	P=2*pi*rand;

	%Contra and Ipsi Sounds
	X=Env.*sin(2*pi*faxis(k)*(1:length(Env))/Fs+P);
	X1=X1+X(N1(k)+1:N1(k)+M);
	X2=X2+X(N2(k)+1:N2(k)+M);

end

%Combining Contra and Ipsi Sounds
X=zeros(1,2*length(X1));
X(1:2:length(X))=X1;
X(2:2:length(X))=X2;

fid=fopen(outfile,'w');
fwrite(fid,round(0.9*X/max(X)*1024*32),'int16')
