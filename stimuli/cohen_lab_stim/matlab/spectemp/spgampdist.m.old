%
%function [Time,Amp,PDist]=spgampdist(filename,f1,f2,Save,Disp)
%
%	FILE NAME 	: SPG AMP DIST
%	DESCRIPTION 	: Computes the Spectro-Temporal 
%			  Amplitude Distribution of a Sound from 
%			  the SPG "spectrogram" file
%
%	filename	: Input SPG File Name
%	f1
%	f2
%	Disp		: Display output window: 'y' or 'n' ( Default = 'n')
%	Save		: Save to File         : 'y' or 'n' ( Default = 'n')
%
%RETUERNED VARIABLES
%	Time		: Time Axis
%	Amp		: Amplitude Axis ( decibels )
%	PDist		: Time Dependent Probability Distribution of Amp
%
function [Time,Amp,PDist]=spgampdist(filename,f1,f2,Save,Disp)

%Loading Param File
index=findstr(filename,'.');
paramfile=[filename(1:index-1) '_param.mat'];
f=['load ' paramfile];
eval(f);

%Opening Input File
fid=fopen(filename);

%Reading Input Data
stft=fread(fid,NF*NT,'float');

%Reading Data and Computing Amplitude Distreibution
PDist=[];
PP=[];
count=0;
while ~feof(fid) & length(stft)==NT*NF

	%Concatenating 100 blocks at a time 
	count2=0;
	PP=[];
	while count2<100 & ~feof(fid) & length(stft)==NT*NF

		%Display Output
		clc
		disp(['Finding Amp Dist for Block: ' num2str(count)])

		%Finding index for f1 and f2
		dff=faxis(2)-faxis(1);
		indexf1=max(1,ceil(f1/dff));
		indexf2=min(floor(f2/dff),length(faxis));

		%Reshape and Selecting Spectrogram between f1-f2
		stft=reshape(stft,NF,NT);
		S=stft(indexf1:indexf2,:);
		f=faxis(indexf1:indexf2);

		%Computing Time Varying Distribution
		S=reshape(S,1,size(S,1)*size(S,2));
		[P,Amp]=hist(S,[-100:1:100]);
		PP=[PP P'/length(S)];
		Amp=Amp';

		%Incrementing count variable
		count=count+1;
		count2=count2+1;
	
		%Reading Input Data Array
		stft=fread(fid,NF*NT,'float');

		%Displaying output if desired
		if strcmp(Disp,'y')
			if count>1
				pcolor((1:size(PDist,2)),Amp,PDist)
				caxis([0 max(max(PDist))])
				shading flat,colormap jet
				pause(0)
			end		
		end

	end

	%Concatenating 100 Block Segments
	if size(PP,2)>1
		PDist=[PDist PP];
	end
end

%Generating Time Axis
Time=(0:size(PDist,2)-1)*NT*(taxis(2)-taxis(1));

%Saving Data if Desired
if strcmp(Save,'y')
	index=findstr(filename,'.');
	f=['save ' filename(1:index-1) '_Cont Time Amp PDist MF NF NT N ATT TW df method'];
	if findstr(version,'5.')
		f=[f ' -v4'];
	end
	eval(f);
end

%Closing all Files
fclose('all')
