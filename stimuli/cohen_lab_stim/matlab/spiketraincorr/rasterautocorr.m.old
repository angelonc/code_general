%
%function [Ravg,Rstd,R05,R01]=rasterautocorr(RASTER,taxis,T,NB)
%
%   FILE NAME       : RASTER AUTO CORR
%   DESCRIPTION     : Average auto correlation function. Determines 
%           		  the trial standard deviation and p<0.01 and p<0.05 
%                     confidence intervals of Ravg with a Bootstrap     
%       			  procedure
%
%	RASTER          : Rastergram
%	taxis           : Time Axis
%	T               : Temporal lag to compute autocorrelation (msec)
%	NB              : Number of Bootstraps for Auto Correlation Estimate
%                     Default = 500
%
%RETURNED VALUES
%	Ravg            : Average autocorrelation function
%	Rstd            : Auto correlation standard deviation array
%	R05             : 2xlength(Ravg) matrix containg the possitive and 
%               	  negative p<0.05 confidence intervals
%	R01             : 2xlength(Ravg) matrix containg the possitive and 
%           		  negative p<0.01 confidence intervals
%
% (C) Monty A. Escabi, Modified July 2006
%
function [Ravg,Rstd,R05,R01,R]=rasterautocorr(RASTER,taxis,T,NB)

%Input Arguments
if nargin<4
	NB=500;
end

%Rastergram Lenght
L=size(RASTER,2);
M=size(RASTER,1);

%Sampling Rate for Rastergram
Fs=1/taxis(1);

%Maximum Temporal Delay
N=ceil(T/1000*Fs)

%Normalizing Rastergram so that maximum bin value is 1/dt=Fs
%RASTER=RASTER*Fs;  
%Modified July 2006, Fixed all routines so that rasters
%are all normalized

%Finding the Average Auto Correlation
R=[];
Ravg=zeros(1,2*N+1);
for k=1:M
	clc
	disp(['Computing auto correlation for channel: ' num2str(k)])
		if exist('/usr/local/bin/xcorrfl')
	%		R=[R;xcorrfft(RASTER(k,:),RASTER(l,:),N)/Fs/max(taxis)];
			R=[R;xcorr(RASTER(k,:),RASTER(k,:),N)/Fs/max(taxis)];
		else
			R=[R;xcorr(RASTER(k,:),RASTER(k,:),N)/Fs/max(taxis)];
		end
end

%Finding Average Correlation and Confidence Intervals using Bootstrap
Ravg=mean(R);
if NB~=0
	[Rstd,R05,R01]=rastercorrbootstrap(R,NB);
else
	R05=-9999;
	R01=-9999;
end
